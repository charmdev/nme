apply plugin: 'com.android.application'

android {
	compileSdkVersion ::ANDROID_TARGET_SDK_VERSION::
	buildToolsVersion "::ANDROID_BUILD_TOOLS_VERSION::"
	
	defaultConfig {
		applicationId "::APP_PACKAGE::"
		minSdkVersion ::ANDROID_MIN_API_LEVEL::
		targetSdkVersion ::ANDROID_TARGET_API_LEVEL::
		versionCode ::APP_BUILD_NUMBER::
        versionName "::APP_VERSION::"
	}
	
	::if KEY_STORE::
	signingConfigs {
		release {
			storeFile file(project.KEY_STORE)
			storePassword project.KEY_STORE_PASSWORD
			keyAlias project.KEY_STORE_ALIAS
			keyPassword project.KEY_STORE_ALIAS_PASSWORD
		}
	}
	::else::
	File signingFile = file('signing.properties')
	if(signingFile.exists()) {
		Properties signing = new Properties()
		signing.load(new FileInputStream(signingFile))
		
		signingConfigs {
			release {
				storeFile file(signing["KEY_STORE"])
				storePassword signing["KEY_STORE_PASSWORD"]
				keyAlias signing["KEY_STORE_ALIAS"]
				keyPassword signing["KEY_STORE_ALIAS_PASSWORD"]
			}
		}
	} else {
		signingConfigs {
			release
		}
	}
	::end::
	
	buildTypes {
		release {
			minifyEnabled false
			signingConfig signingConfigs.release
		}
	}
	
	android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
			

        }
    }
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	::if (ANDROID_LIBRARY_PROJECTS)::::foreach (ANDROID_LIBRARY_PROJECTS)::implementation project(':deps:::name::')
	::end::::end::
}