// Top-level build file where you can add configuration options common to all sub-projects/modules.



buildscript {

    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        ::if NME_FIREBASE::
          classpath 'com.google.gms:google-services:4.3.3'
          ::if NME_FIREBASE_PERFORMANCE::
           // Add the dependency for the Performance Monitoring plugin
           classpath 'com.google.firebase:perf-plugin:1.3.1'  // Performance Monitoring plugin
          ::end::

          ::if NME_FIREBASE_CRASHLYTICS::
          classpath 'com.google.firebase:firebase-crashlytics-gradle:2.2.0'
          ::end::
        ::end::
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

   //gradle.projectsEvaluated {
   //   tasks.withType(JavaCompile) {
   //      options.encoding = 'UTF-8'
   //      options.compilerArgs << "-Xlint:deprecation"
   //   }
   //}
}



task clean(type: Delete) {
    delete rootProject.buildDir
}

configure(subprojects.findAll {!it.file('build.gradle').exists() && it.file('build.xml').exists()}) {
    buildscript {
        repositories {
            google()
            maven {
                url "https://repo1.maven.org/maven2/"
            }
        }
		
        dependencies {
            classpath 'com.android.tools.build:gradle:3.6.3'
        }
    }

    apply plugin: 'android-library'

    android {
		
		dexOptions {
        javaMaxHeapSize "4g"
    }
		
        compileSdkVersion ::ANDROID_TARGET_SDK_VERSION::
        buildToolsVersion "::ANDROID_BUILD_TOOLS_VERSION::"
        defaultConfig {
            minSdkVersion ::ANDROID_MIN_API_LEVEL::
            targetSdkVersion ::ANDROID_TARGET_API_LEVEL::
        }
        
        sourceSets {
            main {
                manifest.srcFile 'AndroidManifest.xml'
                java.srcDirs = ['src']
                res.srcDirs = ['res']
            }
        }
    }
    
    dependencies {
       implementation fileTree(dir: 'libs', include: ['*.jar'])
        api project(':deps:extension-api')
    }
}
